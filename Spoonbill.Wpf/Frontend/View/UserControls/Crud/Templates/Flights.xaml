<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:crud="clr-namespace:Spoonbill.Wpf.Frontend.ViewModels.Crud"
                    xmlns:references="clr-namespace:Spoonbill.Wpf.Frontend.Viewmodels.Crud.IntrospectViewModels.References"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:models="clr-namespace:Spoonbill.Wpf.Data.Models"
                    xmlns:extensions="clr-namespace:Spoonbill.Wpf.Frontend.Extensions"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors">
    <extensions:GenericType x:Key="PassengerReferenceContainer" ResolverType="references:ContainedReferenceTypeResolver" Generic="references:PassengerReference"/>
    <extensions:GenericType x:Key="PilotReferenceContainer" ResolverType="references:ContainedReferenceTypeResolver" Generic="references:PilotReference"/>
    <extensions:GenericType x:Key="StaffReferenceContainer" ResolverType="references:ContainedReferenceTypeResolver" Generic="references:StaffWorkerReference"/>

    <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
    <DataTemplate x:Key="FlightsListItemTemplate" DataType="{x:Type crud:CrudListItemViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="Id" />
                <ColumnDefinition SharedSizeGroup="Name" />
                <ColumnDefinition SharedSizeGroup="Plane Serial" />
                <ColumnDefinition SharedSizeGroup="Departure Time" />
                <ColumnDefinition SharedSizeGroup="ArrivalTime" />
                <ColumnDefinition SharedSizeGroup="Stop Count" />
                <ColumnDefinition SharedSizeGroup="Passenger Count" />
                <ColumnDefinition SharedSizeGroup="Edit" />
                <ColumnDefinition SharedSizeGroup="Inspect" />
                <ColumnDefinition SharedSizeGroup="Delete" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="10, 0" />
                </Style>
            </Grid.Resources>

            <TextBlock Grid.Column="0" Text="{Binding Path=CrudObject.(models:Flight.FlightId), Mode=OneWay}"
                       IsEnabled="False" />
            <TextBlock Grid.Column="1" Text="{Binding Path=CrudObject.(models:Flight.Name), Mode=OneWay}" />
            <TextBlock Grid.Column="2" DataContext="{Binding Path=CrudObject.(models:Flight.Plane)}" Text="{Binding Serial, Mode=OneWay}"/>
            <TextBlock Grid.Column="3" Text="{Binding Path=CrudObject.(models:Flight.DepartureTime), Mode=OneWay}" />
            <TextBlock Grid.Column="4" Text="{Binding Path=CrudObject.(models:Flight.ArrivalTime), Mode=OneWay}" />
            <TextBlock Grid.Column="5" DataContext="{Binding Path=CrudObject.(models:Flight.Stops)}" Text="{Binding Count, Mode=OneWay}" />
            <TextBlock Grid.Column="6" DataContext="{Binding Path=CrudObject.(models:Flight.Passengers)}" Text="{Binding Count, Mode=OneWay}" />
            <Button Grid.Column="7" Content="Edit" Command="{Binding EditCommand}" />
            <Button Grid.Column="8" Content="Inspect" Command="{Binding InspectCommand}" />
            <Button Grid.Column="9" Content="Delete" Command="{Binding DeleteCommand}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FlightsListHeaderTemplate">
        <Grid Margin="8, 0, 0, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="Id" />
                <ColumnDefinition SharedSizeGroup="Name" />
                <ColumnDefinition SharedSizeGroup="Plane Serial" />
                <ColumnDefinition SharedSizeGroup="Departure Time" />
                <ColumnDefinition SharedSizeGroup="ArrivalTime" />
                <ColumnDefinition SharedSizeGroup="Stop Count" />
                <ColumnDefinition SharedSizeGroup="Passenger Count" />
                <ColumnDefinition SharedSizeGroup="Edit" />
                <ColumnDefinition SharedSizeGroup="Inspect" />
                <ColumnDefinition SharedSizeGroup="Delete" />
            </Grid.ColumnDefinitions>

            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="10, 0" />
                </Style>
            </Grid.Resources>

            <TextBlock Grid.Column="0" Text="Id"/>
            <TextBlock Grid.Column="1" Text="Name"/>
            <TextBlock Grid.Column="2" Text="Plane"/>
            <TextBlock Grid.Column="3" Text="Departure Time"/>
            <TextBlock Grid.Column="4" Text="Arrival Time"/>
            <TextBlock Grid.Column="5" Text="Stop Count"/>
            <TextBlock Grid.Column="6" Text="Passenger Count"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FlightsIntrospectItemTemplate" DataType="{x:Type crud:CrudIntrospectItemViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="Margin" Value="2, 0"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="MinWidth" Value="80"/>
                </Style>
            </Grid.Resources>

            <StackPanel Grid.Row="1" Orientation="Vertical" Width="300">
                <!-- Enabled state based on introspect mode -->
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IntrospectMode}" Value="{x:Static crud:IntrospectMode.READ}">
                                <DataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Id" />
                    <TextBlock Grid.Column="1" Text="{Binding Item.Id}"/>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Name" />
                    <TextBox Grid.Column="1" Text="{Binding Item.Name}"/>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="PlaneSerial" />
                    <ComboBox Grid.Column="1"
                              ItemsSource="{Binding Item.AvailablePlanes.Value}"
                              IsTextSearchEnabled="True" HorizontalAlignment="Stretch"
                              SelectedItem="{Binding Item.PlaneSerial}">
                    </ComboBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="ArrivalTime" />
                    <xctk:DateTimePicker Grid.Column="1" Value="{Binding Item.ArrivalTime}"/>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Departure Time" />
                    <xctk:DateTimePicker Grid.Column="1" Value="{Binding Item.DepartureTime}"/>
                </Grid>

                <!-- Passengers -->
                <Border BorderBrush="Gray" BorderThickness="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Passengers"/>
                        <ListView Grid.Row="1" ItemsSource="{Binding Item.Passengers}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                            <ListView.ItemTemplate>
                                <DataTemplate DataType="{StaticResource PassengerReferenceContainer}">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ComboBox Grid.Column="0"
                                                  ItemsSource="{Binding CollectionView}"
                                                  IsTextSearchEnabled="True" IsEditable="False" StaysOpenOnEdit="True"
                                                  DisplayMemberPath="ViewText"
                                                  HorizontalAlignment="Stretch" ItemsPanel="{DynamicResource VirtualPanel}"
                                                  SelectedItem="{Binding Value}"
                                                  IsSynchronizedWithCurrentItem="True">
                                        </ComboBox>

                                        <Button Grid.Column="1" Content="X" Command="{Binding DataContext.Item.RemovePassengerCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" CommandParameter="{Binding}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Button Grid.Row="2" Content="Add Flight" Command="{Binding Item.AddPassengerCommand}"/>
                    </Grid>
                </Border>

                <!-- Pilots -->
                <Border BorderBrush="Gray" BorderThickness="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Pilots"/>
                        <ListView Grid.Row="1" ItemsSource="{Binding Item.Pilots}">
                            <ListView.ItemTemplate>
                                <DataTemplate DataType="{x:Type references:PilotReference}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ComboBox Grid.Column="0"
                                                  ItemsSource="{Binding DataContext.Item.AvailablePilots, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}"
                                                  IsTextSearchEnabled="True" HorizontalAlignment="Stretch"
                                                  SelectedItem="{Binding}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate DataType="{x:Type references:PilotReference}">
                                                    <TextBlock>
                                                        <Run Text="{Binding Id}"/>
                                                        <Run Text=" | "/>
                                                        <Run Text="{Binding FullName}"/>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Button Grid.Column="1" Content="X" Command="{Binding DataContext.Item.RemovePilotCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" CommandParameter="{Binding}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Button Grid.Row="2" Content="Add Flight" Command="{Binding Item.AddPilotCommand}"/>
                    </Grid>
                </Border>

                <!-- StaffWorkers -->
                <Border BorderBrush="Gray" BorderThickness="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Staff Workers"/>
                        <ListView Grid.Row="1" ItemsSource="{Binding Item.StaffWorkers}">
                            <ListView.ItemTemplate>
                                <DataTemplate DataType="{x:Type references:StaffWorkerReference}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ComboBox Grid.Column="0"
                                                  ItemsSource="{Binding DataContext.Item.AvailableStaffWorkers, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}"
                                                  IsTextSearchEnabled="True" HorizontalAlignment="Stretch"
                                                  SelectedItem="{Binding}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate DataType="{x:Type references:StaffWorkerReference}">
                                                    <TextBlock>
                                                        <Run Text="{Binding Id}"/>
                                                        <Run Text=" | "/>
                                                        <Run Text="{Binding FullName}"/>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Button Grid.Column="1" Content="X" Command="{Binding DataContext.Item.RemoveStaffWorkerCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" CommandParameter="{Binding}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Button Grid.Row="2" Content="Add Flight" Command="{Binding Item.AddStaffWorkerCommand}"/>
                    </Grid>
                </Border>
            </StackPanel>
        </Grid>
    </DataTemplate>
</ResourceDictionary>