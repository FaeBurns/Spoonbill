// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spoonbill.Database;

#nullable disable

namespace Spoonbill.Migrations
{
    [DbContext(typeof(SpoonbillContext))]
    [Migration("20240411183356_PersonAndAttributes")]
    partial class PersonAndAttributes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Spoonbill.Database.Entities.Address", b =>
                {
                    b.Property<string>("AddressContent")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("person_id");

                    b.HasKey("AddressContent", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("ADDRESSES");
                });

            modelBuilder.Entity("Spoonbill.Database.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("person_id");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.ToTable("PERSON");
                });

            modelBuilder.Entity("Spoonbill.Database.Entities.PhoneNumber", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("person_id");

                    b.Property<string>("Content")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("phone_number");

                    b.HasKey("PersonId", "Content");

                    b.ToTable("PHONENUMBERS");
                });

            modelBuilder.Entity("Spoonbill.Database.Entities.Address", b =>
                {
                    b.HasOne("Spoonbill.Database.Entities.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Spoonbill.Database.Entities.PhoneNumber", b =>
                {
                    b.HasOne("Spoonbill.Database.Entities.Person", "Person")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Spoonbill.Database.Entities.Person", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
